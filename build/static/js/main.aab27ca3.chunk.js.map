{"version":3,"sources":["comps/Title.js","firebase/config.js","hooks/useStorage.js","comps/ProgressBar.js","comps/UploadForm.js","hooks/useFirestore.js","comps/ImageGrid.js","comps/Modal.js","App.js","index.js"],"names":["Title","className","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","projectStorage","storage","projectFirestore","firestore","timeStamp","FieldValue","serverTimestamp","useStorage","file","useState","progress","setProgress","error","setError","url","setUrl","useEffect","storageRef","ref","name","collectionRef","collection","put","on","snap","percentage","bytesTransferred","totalBytes","err","getDownloadURL","createdAt","add","ProgressBar","setFile","style","width","UploadForm","types","type","onChange","e","selected","target","files","includes","useFirestore","docs","setDocs","unsub","orderBy","onSnapshot","documents","forEach","doc","push","data","id","ImageGrid","setSelectedImg","map","div","key","layout","whileHover","opacity","s","onClick","img","src","alt","initial","animate","transition","delay","Modal","selectedImg","classList","contains","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.aab27ca3.chunk.js","sourcesContent":["import React from 'react';\n\nconst Title = () => {\n  return (\n    <div className=\"title\">\n      <h1>FireGram</h1>\n      <h2>Your Pictures</h2>\n    </div>\n  )\n}\n\nexport default Title;","// Import the functions you need from the SDKs you need\r\n\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/firestore';\r\nimport 'firebase/compat/storage';\r\n\r\n\r\n// Your web app's Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBKWQSu8RjQV3od_zw-09rdbZVQcFPssxA\",\r\n  authDomain: \"my-firegram-30afa.firebaseapp.com\",\r\n  projectId: \"my-firegram-30afa\",\r\n  storageBucket: \"my-firegram-30afa.appspot.com\",\r\n  messagingSenderId: \"115487977782\",\r\n  appId: \"1:115487977782:web:a3147db553efdb25e24397\"\r\n};\r\n\r\n// Initialize Firebase\r\n// const app = initializeApp(firebaseConfig);\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst projectStorage  = firebase.storage();\r\nconst projectFirestore = firebase.firestore();\r\nconst timeStamp = firebase.firestore.FieldValue.serverTimestamp;\r\n\r\nexport {projectStorage,projectFirestore,timeStamp};\r\n","// import { async } from '@firebase/util';\r\nimport {useState , useEffect} from 'react';\r\nimport {projectStorage,projectFirestore,timeStamp} from '../firebase/config';\r\n\r\nconst useStorage = (file) =>{\r\n    const [progress,setProgress] = useState(0);\r\n    const [error,setError] = useState(null);\r\n    const [url,setUrl] = useState(null);\r\n\r\n    useEffect(() => {\r\n        //references\r\n        const storageRef = projectStorage.ref(file.name);\r\n        const collectionRef = projectFirestore.collection('images');\r\n\r\n        storageRef.put(file).on('state Changed',(snap) => {\r\n            let percentage = (snap.bytesTransferred/snap.totalBytes)* 100;\r\n            setProgress(percentage);\r\n        },(err) => {\r\n            setError(err);\r\n        },async () => {\r\n            const url = await storageRef.getDownloadURL();\r\n            const createdAt = timeStamp();\r\n            collectionRef.add({url , createdAt});\r\n            setUrl(url);\r\n        })\r\n    },[file]);\r\n\r\n    return {progress, url,error}\r\n}\r\n\r\nexport default useStorage;","import React, { useEffect } from 'react';\r\nimport useStorage from '../hooks/useStorage';\r\n\r\nconst ProgressBar = ({file,setFile}) =>{\r\n\r\n    const {url , progress} = useStorage(file);\r\n    // console.log(progress,url);\r\n\r\n    useEffect(() =>{\r\n        if(url){\r\n            setFile(null);\r\n        }\r\n    },[url,setFile])\r\n\r\n    return (\r\n        <div className='progress-bar' style={{width:progress + '%'}}></div>\r\n    )\r\n}\r\nexport default ProgressBar;","import React,{useState} from 'react'; \r\nimport ProgressBar from './ProgressBar';\r\n\r\nconst UploadForm = () =>{\r\n\r\n    const [file,setFile] = useState(null);\r\n    const [error,setError] = useState(null);\r\n\r\n    const types = ['image/png','image/jpeg'];\r\n\r\n    const changeHandler = (e) =>{\r\n        const selected = e.target.files[0];\r\n        // console.log(selected);\r\n\r\n        if(selected && types.includes(selected.type)){\r\n            setFile(selected);\r\n            setError('');\r\n        }else{\r\n            setFile(null);\r\n            setError('Please Select an Image File(jpeg or png)');\r\n        }\r\n    }\r\n\r\n    return(\r\n        <form>\r\n            <label>\r\n                <input type='file' onChange={changeHandler}/>\r\n                <span>+</span>\r\n            </label>\r\n            <div className='output'>\r\n                {error && <div className='error'>{error}</div>}\r\n                { file && <div>{file.name}</div>}\r\n                { file && <ProgressBar file={file} setFile = {setFile}/>}\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default UploadForm;","import { useState,useEffect } from \"react\";\r\nimport { projectFirestore } from \"../firebase/config\";\r\n\r\nconst useFirestore = (collection) =>{\r\n    const [docs,setDocs] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        const unsub = projectFirestore.collection(collection)\r\n        .orderBy('createdAt','desc')\r\n        .onSnapshot((snap)=>{\r\n            let documents = [];\r\n            snap.forEach(doc =>{\r\n                documents.push({...doc.data(),id: doc.id});\r\n            });\r\n            setDocs(documents);\r\n        });\r\n\r\n        return () =>unsub();\r\n\r\n    },[collection])\r\n\r\n    return {docs};\r\n}\r\n\r\nexport default useFirestore;","// import React from \"react\";\r\n// import useFirestore from \"../hooks/useFirestore\";\r\n\r\n// const ImageGrid =({setSelectedImg}) =>{\r\n//     const {docs} = useFirestore('images');\r\n//     console.log(docs);\r\n\r\n//     return (\r\n//         <div className=\"img-grid\">\r\n//             {docs && docs.map(doc =>(\r\n//                 <div className=\"img-wrap\" key={doc.id}\r\n//                     onClick={() => setSelectedImg(doc.url)}\r\n//                 >\r\n//                     <img src = {doc.url} alt=\"uploaded pic\"/>\r\n//                 </div>\r\n//             ))}\r\n//         </div>\r\n//     )\r\n// }\r\n\r\n// export default ImageGrid;\r\n\r\nimport React from 'react';\r\nimport useFirestore from '../hooks/useFirestore';\r\nimport { AnimatePresence, motion } from 'framer-motion/dist/framer-motion';\r\n\r\nconst ImageGrid = ({ setSelectedImg }) => {\r\n  const { docs } = useFirestore('images');\r\n\r\n  return (\r\n    <div className=\"img-grid\">\r\n      {docs && docs.map(doc => (\r\n        <motion.div className=\"img-wrap\" key={doc.id} \r\n          layout\r\n          whileHover={{ opacity: 1 }}s\r\n          onClick={() => setSelectedImg(doc.url)}\r\n        >\r\n          <motion.img src={doc.url} alt=\"uploaded pic\"\r\n            initial={{ opacity: 0 }}\r\n            animate={{ opacity: 1 }}\r\n            transition={{ delay: 1 }}\r\n          />\r\n        </motion.div>\r\n      ))}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ImageGrid;","import React from \"react\";\r\n\r\nconst Modal = ({ selectedImg,setSelectedImg}) => {\r\n    const handleClick = (e) =>{\r\n        if(e.target.classList.contains('backdrop')){\r\n            setSelectedImg(null);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"backdrop\" onClick={handleClick}>\r\n            <img src ={selectedImg} alt=\"enlarged pic\"/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Modal;","import React, { useState } from 'react';\nimport Title from './comps/Title';\nimport UploadForm from './comps/UploadForm';\nimport ImageGrid from './comps/ImageGrid';\nimport Modal from './comps/Modal';\n\nfunction App() {\n\n  const [selectedImg,setSelectedImg] = useState(null);\n\n  return (\n    <div className=\"App\">\n      <Title/>\n      <UploadForm/>\n      <h2>Gallery</h2>\n      <ImageGrid setSelectedImg={setSelectedImg}/>\n      {selectedImg  \n       && <Modal selectedImg={selectedImg} setSelectedImg = {setSelectedImg}/>}\n    </div>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA"],"sourceRoot":""}